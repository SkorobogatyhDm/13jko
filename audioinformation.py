
# Задание №1
# №1. Определить объем памяти для хранения цифрового аудиофайла, время звучания которого составляет две минуты при частоте дискретизации 44,1 кГц и разрешении 16 бит.
# По формуле, чтобы определить объём памяти для хранение цифрового аудиофайла нужно => частотаДисретизации(в гц) *  время(в сек) * разрешение(в битах) / 8 

import math

def Task1(refreshDisc, time, resolution):
    Vmem = (refreshDisc * 1000) * (time * 60) * resolution / 8
    return Vmem

# Задание №2
# №2. Одна минута записи цифрового аудиофайла занимает на диске 1,3 Мб, разрядность звуковой платы - 8. С какой частотой дискретизации записан звук?
# Чтобы найти частоту дискретизации надо => частота дискретизации = объём(в битах) / (время записи в секундах * разрядность)

def Task2(Vmem, time, resolution):
    refreshDisc = (Vmem * 8 * 1024) / ((time * 60) * (resolution))
    return refreshDisc



# №3. Объем свободной памяти на диске - 0,01 Гб, разрядность звуковой платы - 16. Какова длительность звучания цифрового аудиофайла, записанного с частотой дискретизации 44100 Гц?
# по формуле Время звучания(в сек) = объём(в битах) / (разрядность * частоту(в гц))

def Task3(Vmem, refresh, resolutinon):
    time = (Vmem * 100 * 1024 * 1024 * 8) / (refresh * resolutinon)
    return time

# №4. Рассчитайте время звучания моноаудиофайла, если при 16-битном кодировании и частоте дискретизации 32 кГц его объем равен 700 Кбайт.
# решение аналогичное

def Task4(Vmem, refresh, resolutinon):
    time = (Vmem * 1024 * 8) / ((refresh* 1000) * resolutinon)
    return time

# №5. Оцените информационный объем моноаудиофайла (в килобайтах) длительностью звучания 1 мин. 
# если «глубина» кодирования и частота дискретизации звукового сигнала равны соответственно: 16 бит и 8 кГц.
#  по формуле объём = длительность(в сек) * глубина кодирования  * частоту дескритизации(в гц) / 8 / 1024(чтобы найти вес в кб)

def Task5(refreshDisc, time, resolution):
    Vmem = (refreshDisc * 1000) * (time * 60) * resolution / 8 / 1024
    return Vmem

print(Task3(0.01, 44100, 16))